<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 25.2.5">

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`popular_date_examples`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;popular_date_examples&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\arrays.xml"
            line="3"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_speed`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;sensor_speed&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\arrays.xml"
            line="14"
            column="19"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="43"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_damping`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;sensor_damping&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\arrays.xml"
            line="19"
            column="19"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="44"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`antlia`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;antlia&quot; translation_description=&quot;Name of the Antlia constellation&quot;>Antlia&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="3"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`apus`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;apus&quot; translation_description=&quot;Name of the Apus constellation&quot;>Apus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="4"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ara`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ara&quot; translation_description=&quot;Name of the Ara constellation&quot;>Ara&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="5"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`caelum`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;caelum&quot; translation_description=&quot;Name of the Caelum constellation&quot;>Caelum&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="6"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`camelopardalis`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;camelopardalis&quot; translation_description=&quot;Name of the Camelopardalis constellation&quot;>Camelopardalis&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="7"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`canes_venatici`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;canes_venatici&quot; translation_description=&quot;Name of the Canes Venatici constellation&quot;>Canes Venatici&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`canis_minor`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;canis_minor&quot; translation_description=&quot;Name of the Canis Minor constellation&quot;>Canis Minor&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="9"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`cepheus`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;cepheus&quot; translation_description=&quot;Name of the Cepheus constellation&quot;>Cepheus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="10"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`chamaeleon`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;chamaeleon&quot; translation_description=&quot;Name of the Chamaeleon constellation&quot;>Chamaeleon&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="11"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`circinus`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;circinus&quot; translation_description=&quot;Name of the Circinus constellation&quot;>Circinus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="12"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`columba`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;columba&quot; translation_description=&quot;Name of the Columba constellation&quot;>Columba&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="13"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`coma_berenices`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;coma_berenices&quot; translation_description=&quot;Name of the Coma Berenices constellation&quot;>Coma Berenices&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="14"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`corona_australis`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;corona_australis&quot; translation_description=&quot;Name of the Corona Australis constellation&quot;>Corona Australis&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="15"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`corona_borealis`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;corona_borealis&quot; translation_description=&quot;Name of the Corona Borealis constellation&quot;>Corona Borealis&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="16"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`corvus`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;corvus&quot; translation_description=&quot;Name of the Corvus constellation&quot;>Corvus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="17"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`crater`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;crater&quot; translation_description=&quot;Name of the Crater constellation&quot;>Crater&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`delphinus`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;delphinus&quot; translation_description=&quot;Name of the Delphinus constellation&quot;>Delphinus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="19"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`dorado`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;dorado&quot; translation_description=&quot;Name of the Dorado constellation&quot;>Dorado&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="20"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`equuleus`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;equuleus&quot; translation_description=&quot;Name of the Equuleus constellation&quot;>Equuleus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`fornax`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;fornax&quot; translation_description=&quot;Name of the Fornax constellation&quot;>Fornax&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`horologium`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;horologium&quot; translation_description=&quot;Name of the Horologium constellation&quot;>Horologium&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="23"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hydra`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hydra&quot; translation_description=&quot;Name of the Hydra constellation&quot;>Hydra&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="24"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`indus`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;indus&quot; translation_description=&quot;Name of the Indus constellation&quot;>Indus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="25"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`lacerta`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;lacerta&quot; translation_description=&quot;Name of the Lacerta constellation&quot;>Lacerta&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`leo_minor`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;leo_minor&quot; translation_description=&quot;Name of the Leo Minor constellation&quot;>Leo Minor&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`lepus`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;lepus&quot; translation_description=&quot;Name of the Lepus constellation&quot;>Lepus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`lynx`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;lynx&quot; translation_description=&quot;Name of the Lynx constellation&quot;>Lynx&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`mensa`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;mensa&quot; translation_description=&quot;Name of the Mensa constellation&quot;>Mensa&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="30"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`microscopium`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;microscopium&quot; translation_description=&quot;Name of the Microscopium constellation&quot;>Microscopium&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`monoceros`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;monoceros&quot; translation_description=&quot;Name of the Monoceros constellation&quot;>Monoceros&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="32"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`musca`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;musca&quot; translation_description=&quot;Name of the Musca constellation&quot;>Musca&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="33"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`norma`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;norma&quot; translation_description=&quot;Name of the Norma constellation&quot;>Norma&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="34"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`octans`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;octans&quot; translation_description=&quot;Name of the Octans constellation&quot;>Octans&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="35"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pictor`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pictor&quot; translation_description=&quot;Name of the Pictor constellation&quot;>Pictor&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pyxis`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pyxis&quot; translation_description=&quot;Name of the Pyxis constellation&quot;>Pyxis&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="37"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`reticulum`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;reticulum&quot; translation_description=&quot;Name of the Reticulum constellation&quot;>Reticulum&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sagitta`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sagitta&quot; translation_description=&quot;Name of the Sagitta constellation&quot;>Sagitta&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sculptor`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sculptor&quot; translation_description=&quot;Name of the Sculptor constellation&quot;>Sculptor&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="40"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`scutum`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;scutum&quot; translation_description=&quot;Name of the Scutum constellation&quot;>Scutum&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="41"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`serpens_caput`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;serpens_caput&quot; translation_description=&quot;Name of the Serpens Caput constellation&quot;>Serpens Caput&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="42"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`serpens_cauda`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;serpens_cauda&quot; translation_description=&quot;Name of the Serpens Cauda constellation&quot;>Serpens Cauda&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="43"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sextans`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sextans&quot; translation_description=&quot;Name of the Sextans constellation&quot;>Sextans&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="44"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`telescopium`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;telescopium&quot; translation_description=&quot;Name of the Telescopium constellation&quot;>Telescopium&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="45"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`triangulum`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;triangulum&quot; translation_description=&quot;Name of the Triangulum constellation&quot;>Triangulum&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="46"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`triangulum_australe`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;triangulum_australe&quot; translation_description=&quot;Name of the Triangulum Australe constellation&quot;>Triangulum Australe&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="47"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`volans`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;volans&quot; translation_description=&quot;Name of the Volans constellation&quot;>Volans&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="48"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`vulpecula`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;vulpecula&quot; translation_description=&quot;Name of the Vulpecula constellation&quot;>Vulpecula&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\celestial_objects.xml"
            line="49"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`eula_text`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="&lt;string name=&quot;eula_text&quot; translation_description=&quot;Privacy policy and EULA in html&quot;>"
        errorLine2="        ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\eula.xml"
            line="2"
            column="9"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`help_text`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="&lt;string name=&quot;help_text&quot; translation_description=&quot;Please do not change the &amp;lt; and &amp;gt; markup&quot;>"
        errorLine2="        ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\help.xml"
            line="2"
            column="9"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_speed_values`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;sensor_speed_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\notranslate-arrays.xml"
            line="4"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_damping_values`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;sensor_damping_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\notranslate-arrays.xml"
            line="9"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`app_name`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;app_name&quot; translation_description=&quot;Application Title&quot;>SciComm&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="4"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_settings`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_settings&quot;>Settings&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="5"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_search`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_search&quot;>Search&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="6"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`cancel`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;cancel&quot;>Cancel&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="7"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`set`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;set&quot; translation_description=&quot;Button label. Set the date to the given value&quot;>Set&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`go`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;go&quot;>Go!&lt;/string>"
        errorLine2="            ~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="9"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_prefs`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_prefs&quot;>Location Settings&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="10"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`force_gps_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;force_gps_pref&quot;>Always use GPS&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="11"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`force_gps_pref_hint`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;force_gps_pref_hint&quot; translation_description=&quot;this string continues from \&apos;Always use GPS\&apos;&quot;>if enabled, even if network location is available&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="12"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`no_use_gps_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;no_use_gps_pref&quot;>Set location manually&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="13"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`no_use_gps_pref_hint`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;no_use_gps_pref_hint&quot;>Enter a place or a lat/long below&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="14"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_placename`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_placename&quot;>Place name&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="15"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_placename_hint`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_placename_hint&quot; translation_description=&quot;An example address.  Translators: please pick an address suitable for your country.  If it has an astronomical connection (e.g. the address of an observatory or famous astronomer) then that would be even better.&quot;>e.g. 1400 West Mars Hill Road, Flagstaff, AZ.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="16"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_lat_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_lat_pref&quot;>Latitude&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="17"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_long_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_long_pref&quot;>Longitude&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`degrees`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;degrees&quot; translation_description=&quot;angular degrees&quot;>Degrees&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="19"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`preferences`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;preferences&quot;>preferences&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="20"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_no_auto`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_no_auto&quot;>Auto-location permission is disabled on your phone.   You can set the location manually in preferences.  Until then the map will be incorrect.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_offer_to_enable`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_offer_to_enable&quot;>Auto-location is disabled.  Would you like to enable it?&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_offer_to_enable_gps_title`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_offer_to_enable_gps_title&quot;>Auto-location disabled&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="23"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_set_auto`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_set_auto&quot;>Location set from %1$s to %2$s&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="24"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_unable_to_geocode`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_unable_to_geocode&quot;>Unable to decode your location - perhaps your network isn\&apos;t available?&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="25"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_not_found_title`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_not_found_title&quot; translation_description=&quot;dialog box title when location not found&quot;>Sorry&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_not_found`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_not_found&quot; translation_description=&quot;dialog message when placename not found&quot;>%s not found.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_long_lat`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_long_lat&quot;>Longitude:%1$s, Latitude:%2$s&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_place_found`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_place_found&quot;>Place found.  Setting latitude %1$f and longitude %2$f&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`use_magnetic_correction`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;use_magnetic_correction&quot;>Use magnetic correction&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="30"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`use_magnetic_correction_hint`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;use_magnetic_correction_hint&quot;>Use knowledge of your location to correct orientation from magnetic north to true north&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`provider_prefs`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;provider_prefs&quot; translation_description=&quot;Dialog box title for a preferences dialog&quot;>Show...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="33"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_stars_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_stars_pref&quot;>Stars&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="34"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_constellations_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_constellations_pref&quot;>Constellations&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="35"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_messier_objects_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_messier_objects_pref&quot; translation_description=&quot;The celestial objects catalogued by Charles Messier&quot;>Messier Objects&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_planets_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_planets_pref&quot;>Solar System&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="37"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_grid_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_grid_pref&quot;>RA/Dec Grid&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_horizon_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_horizon_pref&quot;>Horizon&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_sky_gradient`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_sky_gradient&quot; translation_description=&quot;This is a shading of the color of the sky used for effect&quot;>Sky Gradient&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="40"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_meteors_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_meteors_pref&quot;>Meteor Showers&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="41"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_prefs`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sensor_prefs&quot;>Sensor Settings (experts)&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="42"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ecliptic`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ecliptic&quot;>Ecliptic&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="45"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_hubble_layer_pref`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_hubble_layer_pref&quot;>Hubble Images&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="47"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`malformed_loc_error`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;malformed_loc_error&quot;>Latitude or longitude setting isn\&apos;t a number.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="48"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`dialog_accept`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;dialog_accept&quot; translation_description=&quot;accepting the licence agreement&quot;>Accept&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="49"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`dialog_decline`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;dialog_decline&quot; translation_description=&quot;declining the licence agreement&quot;>No Thanks&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="50"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`dialog_ok_button`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;dialog_ok_button&quot;>OK&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="51"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_help`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_help&quot; translation_description=&quot;menu item to show \&apos;Help\&apos; box&quot;>Help&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="52"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`help_dialog_title`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;help_dialog_title&quot;>Help for Sky Map&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="53"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`eula_dialog_title`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;eula_dialog_title&quot;>End User License Agreement&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="54"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`set_manual`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;set_manual&quot;>Switching to manual mode&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="55"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`set_auto`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;set_auto&quot;>Switching to automatic mode&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="56"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_zoom_in`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_zoom_in&quot;>Zoom in&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="57"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_zoom_out`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_zoom_out&quot;>Zoom out&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="58"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_toggle_dim`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_toggle_dim&quot;>Toggle night mode&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`zenith`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;zenith&quot;>ZENITH&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="60"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`nadir`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;nadir&quot;>NADIR&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="61"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`north`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;north&quot;>NORTH&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="62"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`east`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;east&quot;>EAST&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="63"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`west`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;west&quot;>WEST&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="64"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`south`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;south&quot;>SOUTH&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="65"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`search_label`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;search_label&quot;>Search the Sky&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="66"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`search_hint`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;search_hint&quot; translation_description=&quot;an example search target&quot;>e.g. Mars&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="67"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`no_search_title`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;no_search_title&quot;>No results&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="68"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`no_search_results_text`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;no_search_results_text&quot;>No results were found.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="69"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`many_search_results_title`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;many_search_results_title&quot;>Did you mean?&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="70"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`many_search_results_text`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;many_search_results_text&quot;>Please select one&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="71"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`searching_for_text`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;searching_for_text&quot;>Searching for %s...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="72"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`found_target_text`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;found_target_text&quot;>Found %s.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="73"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`other`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;other&quot; translation_description=&quot;A preference category (ie preferences that don&apos;t belong in any other category)&quot;>Other&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="74"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`planetary_images`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;planetary_images&quot;>Show Planet Images&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="75"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_time`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_time&quot;>Time Travel&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="76"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_start_message`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_start_message&quot;>Traveling through time ...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="77"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_start_message_alt`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_start_message_alt&quot;>Traveling through time to %s ...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="78"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_close_message`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_close_message&quot;>Back to the present ...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="79"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`popular_dates_prompt`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;popular_dates_prompt&quot; translation_description=&quot;Label for a list of dates the user can choose from&quot;>Popular dates&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="81"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`custom_date_prompt`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;custom_date_prompt&quot; translation_description=&quot;Label telling the user to manually specify a date&quot;>Or select your own date:&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="82"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`change_date_prompt`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;change_date_prompt&quot;>Change the date&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="83"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`change_time_prompt`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;change_time_prompt&quot;>Change the time&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="84"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`now_visiting`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;now_visiting&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="85"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_label_past`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_label_past&quot; translation_description=&quot;Label showing that we are in the past&quot;>Time Travel: Past&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="88"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_label_future`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_label_future&quot; translation_description=&quot;Label showing that we are in the future&quot;>Time Travel: Future&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="89"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_stopped`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_stopped&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Time travel frozen&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="90"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_second_speed`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_second_speed&quot; translation_description=&quot;Label showing rate of travel through time.  The symbol means greater than.&quot;>Traveling &amp;gt; @ 1 sec/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="91"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_minute_speed`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_minute_speed&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;gt; @ 1 min/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="92"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_10minute_speed`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_10minute_speed&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;gt; @ 10 min/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="93"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_hour_speed`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_hour_speed&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;gt; @ 1 hour/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="94"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_day_speed`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_day_speed&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;gt; @ 1 day/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="95"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_week_speed`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_week_speed&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;gt; @ 1 week/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="96"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_second_speed_back`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_second_speed_back&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;lt; @ 1 sec/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="97"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_minute_speed_back`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_minute_speed_back&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;lt; @ 1 min/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="98"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_10minute_speed_back`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_10minute_speed_back&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;lt; @ 10 min/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="99"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_hour_speed_back`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_hour_speed_back&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;lt; @ 1 hour/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="100"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_day_speed_back`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_day_speed_back&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;lt; @ 1 day/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="101"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`time_travel_week_speed_back`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;time_travel_week_speed_back&quot; translation_description=&quot;Label showing rate of travel through time&quot;>Traveling &amp;lt; @ 1 week/sec&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="102"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`use_sound_effects`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;use_sound_effects&quot; translation_description=&quot;A preferences menu label&quot;>Enable sound&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="103"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`enable_layer_toast`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;enable_layer_toast&quot;>Enabling %s layer&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="105"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`disable_layer_toast`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;disable_layer_toast&quot;>Disabling %s layer&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="106"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_gallery`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_gallery&quot;>Gallery&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="107"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`gallery_image_search_btn`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;gallery_image_search_btn&quot;>Find in sky&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="108"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`gallery_image_back_btn`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;gallery_image_back_btn&quot;>Back to gallery&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="109"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hubble_image_gallery_title`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hubble_image_gallery_title&quot;>Sky Map Gallery&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="110"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hubble_image`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hubble_image&quot;>Hubble Image&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="111"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`search_target_found_message`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;search_target_found_message&quot; translation_description=&quot;displayed when a search target has been located&quot;>You found:&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="114"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`search_overlay_title`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;search_overlay_title&quot; translation_description=&quot;title for search overlay&quot;>Point your phone toward the arrow&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="115"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`search_target_looking_message`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;search_target_looking_message&quot; translation_description=&quot;displayed when a search target is being searched for&quot;>Looking for:&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="116"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sun_wont_set_message`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sun_wont_set_message&quot;>The sun will not set during the next 24 hours at your current location.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="117"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sun_wont_rise_message`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sun_wont_rise_message&quot;>The sun will not rise during the next 24 hours at your current location.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="118"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sun`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sun&quot;>Sun&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="120"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`moon`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;moon&quot;>Moon&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="121"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`mercury`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;mercury&quot;>Mercury&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="122"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`venus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;venus&quot;>Venus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="123"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`earth`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;earth&quot;>Earth&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="124"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`mars`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;mars&quot;>Mars&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="125"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`jupiter`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;jupiter&quot;>Jupiter&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="126"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`saturn`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;saturn&quot;>Saturn&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="127"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`uranus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;uranus&quot;>Uranus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="128"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`neptune`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;neptune&quot;>Neptune&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="129"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pluto`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pluto&quot;>Pluto&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="130"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`crab_nebula`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;crab_nebula&quot; translation_description=&quot;hubble object&quot;>Crab Nebula&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="131"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`eagle_nebula`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;eagle_nebula&quot; translation_description=&quot;hubble object&quot;>Eagle Nebula&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="132"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`andromeda_galaxy`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;andromeda_galaxy&quot; translation_description=&quot;hubble object&quot;>Andromeda Galaxy&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="133"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`orion_nebula`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;orion_nebula&quot; translation_description=&quot;hubble object&quot;>Orion Nebula&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="134"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`whirlpool_galaxy`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;whirlpool_galaxy&quot; translation_description=&quot;hubble object&quot;>Whirlpool Galaxy&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="135"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ring_nebula`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ring_nebula&quot; translation_description=&quot;hubble object&quot;>Ring Nebula&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="136"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pinwheel_galaxy`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pinwheel_galaxy&quot; translation_description=&quot;hubble object&quot;>Pinwheel Galaxy&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="137"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sombrero_galaxy`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sombrero_galaxy&quot; translation_description=&quot;hubble object&quot;>Sombrero Galaxy&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="138"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hercules_gc`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hercules_gc&quot; translation_description=&quot;hubble object&quot;>Hercules Globular Cluster&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="139"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pleiades`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pleiades&quot; translation_description=&quot;hubble object&quot;>Pleiades&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="140"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`cats_eye_nebula`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;cats_eye_nebula&quot; translation_description=&quot;hubble object&quot;>Cat\&apos;s Eye Nebula&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="141"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`omega_centauri`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;omega_centauri&quot; translation_description=&quot;hubble object&quot;>Omega Centauri Globular Cluster&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="142"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`v838_mon`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;v838_mon&quot; translation_description=&quot;hubble object&quot;>V838 Monocerotis&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="143"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sn1987a`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sn1987a&quot; translation_description=&quot;hubble object&quot;>Supernova 1987a&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="144"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hubble_deep_field`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hubble_deep_field&quot; translation_description=&quot;hubble object&quot;>Hubble Deep Field&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="145"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hdf`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hdf&quot; translation_description=&quot;hubble object&quot;>Hubble Deep Field&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="146"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`rho_oph`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;rho_oph&quot; translation_description=&quot;hubble object&quot;>Rho Ophiuchus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="147"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_tos`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_tos&quot;>Terms of Service&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="148"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_diagnostics`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_diagnostics&quot;>Diagnostics&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="149"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`control_panel_btn`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;control_panel_btn&quot; translation_description=&quot;Label for the control panel button&quot;>Control Panel&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="151"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`north_pole`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;north_pole&quot;>NP&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="153"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`south_pole`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;south_pole&quot;>SP&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="154"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`andromeda`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;andromeda&quot; translation_description=&quot;Name of the Andromeda constellation&quot;>Andromeda&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="156"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`aquarius`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;aquarius&quot; translation_description=&quot;Name of the Aquarius constellation&quot;>Aquarius&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="157"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`aquila`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;aquila&quot; translation_description=&quot;Name of the Aquila constellation&quot;>Aquila&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="158"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`aries`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;aries&quot; translation_description=&quot;Name of the Aries constellation&quot;>Aries&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="159"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`auriga`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;auriga&quot; translation_description=&quot;Name of the Auriga constellation&quot;>Auriga&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="160"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`bootes`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;bootes&quot; translation_description=&quot;Name of the Bootes constellation&quot;>Bootes&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="161"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`cancer`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;cancer&quot; translation_description=&quot;Name of the Cancer constellation&quot;>Cancer&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="162"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`canis_major`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;canis_major&quot; translation_description=&quot;Name of the Canis Major constellation&quot;>Canis Major&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="163"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`capricornus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;capricornus&quot; translation_description=&quot;Name of the Capricornus constellation&quot;>Capricornus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="164"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`carina`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;carina&quot; translation_description=&quot;Name of the Carina constellation&quot;>Carina&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="165"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`cassiopeia`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;cassiopeia&quot; translation_description=&quot;Name of the Cassiopeia constellation&quot;>Cassiopeia&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="166"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`centaurus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;centaurus&quot; translation_description=&quot;Name of the Centaurus constellation&quot;>Centaurus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="167"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`cetus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;cetus&quot; translation_description=&quot;Name of the Cetus constellation&quot;>Cetus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="168"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`crux`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;crux&quot; translation_description=&quot;Name of the Crux constellation&quot;>Crux&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="169"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`cygnus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;cygnus&quot; translation_description=&quot;Name of the Cygnus constellation&quot;>Cygnus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="170"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`draco`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;draco&quot; translation_description=&quot;Name of the Draco constellation&quot;>Draco&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="171"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`eridanus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;eridanus&quot; translation_description=&quot;Name of the Eridanus constellation&quot;>Eridanus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="172"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`gemini`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;gemini&quot; translation_description=&quot;Name of the Gemini constellation&quot;>Gemini&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="173"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`grus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;grus&quot; translation_description=&quot;Name of the Grus constellation&quot;>Grus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="174"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hercules`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hercules&quot; translation_description=&quot;Name of the Hercules constellation&quot;>Hercules&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="175"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hydrus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hydrus&quot; translation_description=&quot;Name of the Hydrus constellation&quot;>Hydrus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="176"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`leo`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;leo&quot; translation_description=&quot;Name of the Leo constellation&quot;>Leo&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="177"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`libra`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;libra&quot; translation_description=&quot;Name of the Libra constellation&quot;>Libra&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="178"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`lupus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;lupus&quot; translation_description=&quot;Name of the Lupus constellation&quot;>Lupus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="179"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`lyra`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;lyra&quot; translation_description=&quot;Name of the Lyra constellation&quot;>Lyra&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="180"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ophiuchus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ophiuchus&quot; translation_description=&quot;Name of the Ophiuchus constellation&quot;>Ophiuchus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="181"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`orion`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;orion&quot; translation_description=&quot;Name of the Orion constellation&quot;>Orion&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="182"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pavo`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pavo&quot; translation_description=&quot;Name of the Pavo constellation&quot;>Pavo&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="183"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pegasus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pegasus&quot; translation_description=&quot;Name of the Pegasus constellation&quot;>Pegasus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="184"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`perseus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;perseus&quot; translation_description=&quot;Name of the Perseus constellation&quot;>Perseus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="185"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`phoenix`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;phoenix&quot; translation_description=&quot;Name of the Phoenix constellation&quot;>Phoenix&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="186"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pisces`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pisces&quot; translation_description=&quot;Name of the Pisces constellation&quot;>Pisces&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="187"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`piscis_austrinus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;piscis_austrinus&quot; translation_description=&quot;Name of the Piscis Austrinus constellation&quot;>Piscis Austrinus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="188"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`puppis`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;puppis&quot; translation_description=&quot;Name of the Puppis constellation&quot;>Puppis&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="189"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sagittarius`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sagittarius&quot; translation_description=&quot;Name of the Sagittarius constellation&quot;>Sagittarius&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="190"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`scorpius`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;scorpius&quot; translation_description=&quot;Name of the Scorpius constellation&quot;>Scorpius&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="191"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`taurus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;taurus&quot; translation_description=&quot;Name of the Taurus constellation&quot;>Taurus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="192"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`tucana`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;tucana&quot; translation_description=&quot;Name of the Tucana constellation&quot;>Tucana&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="193"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ursa_major`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ursa_major&quot; translation_description=&quot;Name of the Ursa Major constellation&quot;>Ursa Major&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="194"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ursa_minor`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ursa_minor&quot; translation_description=&quot;Name of the Ursa Minor constellation&quot;>Ursa Minor&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="195"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`vela`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;vela&quot; translation_description=&quot;Name of the Vela constellation&quot;>Vela&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="196"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`virgo`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;virgo&quot; translation_description=&quot;Name of the Virgo constellation&quot;>Virgo&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="197"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`capricorn`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;capricorn&quot; translation_description=&quot;Name of the Capricorn constellation&quot;>Capricorn&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="198"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`southern_cross`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;southern_cross&quot; translation_description=&quot;Name of the Southern Cross constellation&quot;>Southern Cross&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="199"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`scorpio`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;scorpio&quot; translation_description=&quot;Name of the Scorpio constellation&quot;>Scorpio&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="200"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`little_dipper`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;little_dipper&quot; translation_description=&quot;Name of the Little Dipper constellation&quot;>Little Dipper&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="201"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`little_bear`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;little_bear&quot; translation_description=&quot;Name of the Little Bear constellation&quot;>Little Bear&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="202"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`big_dipper`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;big_dipper&quot; translation_description=&quot;Name of the Big Dipper constellation&quot;>Big Dipper&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="203"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`great_bear`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;great_bear&quot; translation_description=&quot;Name of the Great Bear constellation&quot;>Great Bear&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="204"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`plough`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;plough&quot; translation_description=&quot;Name of the Plough constellation&quot;>Plough&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="205"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sirius`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sirius&quot; translation_description=&quot;Name of the Star Sirius&quot;>Sirius&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="207"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`canopus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;canopus&quot; translation_description=&quot;Name of the Star Canopus&quot;>Canopus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="208"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`arcturus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;arcturus&quot; translation_description=&quot;Name of the Star Arcturus&quot;>Arcturus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="209"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`rigel_kentaurus_a`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;rigel_kentaurus_a&quot; translation_description=&quot;Name of the Star Rigel Kentaurus A&quot;>Rigel Kentaurus A&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="210"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`rigil_kentaurus_a`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;rigil_kentaurus_a&quot; translation_description=&quot;Name of the Star Rigil Kentaurus A&quot;>Rigil Kentaurus A&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="211"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`vega`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;vega&quot; translation_description=&quot;Name of the Star Vega&quot;>Vega&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="212"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`rigel`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;rigel&quot; translation_description=&quot;Name of the Star Rigel&quot;>Rigel&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="213"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`procyon`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;procyon&quot; translation_description=&quot;Name of the Star Procyon&quot;>Procyon&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="214"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`betelgeuse`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;betelgeuse&quot; translation_description=&quot;Name of the Star Betelgeuse&quot;>Betelgeuse&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="215"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`achernar`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;achernar&quot; translation_description=&quot;Name of the Star Achernar&quot;>Achernar&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="216"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hadar`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hadar&quot; translation_description=&quot;Name of the Star Hadar&quot;>Hadar&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="217"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`capella`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;capella&quot; translation_description=&quot;Name of the Star Capella&quot;>Capella&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="218"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`altair`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;altair&quot; translation_description=&quot;Name of the Star Altair&quot;>Altair&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="219"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`acrux`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;acrux&quot; translation_description=&quot;Name of the Star Acrux&quot;>Acrux&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="220"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`aldebaran`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;aldebaran&quot; translation_description=&quot;Name of the Star Aldebaran&quot;>Aldebaran&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="221"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`spica`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;spica&quot; translation_description=&quot;Name of the Star Spica&quot;>Spica&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="222"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`antares`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;antares&quot; translation_description=&quot;Name of the Star Antares&quot;>Antares&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="223"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pollux`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pollux&quot; translation_description=&quot;Name of the Star Pollux&quot;>Pollux&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="224"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`fomalhaut`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;fomalhaut&quot; translation_description=&quot;Name of the Star Fomalhaut&quot;>Fomalhaut&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="225"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`deneb`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;deneb&quot; translation_description=&quot;Name of the Star Deneb&quot;>Deneb&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="226"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`regulus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;regulus&quot; translation_description=&quot;Name of the Star Regulus&quot;>Regulus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="227"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`adhara`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;adhara&quot; translation_description=&quot;Name of the Star Adhara&quot;>Adhara&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="228"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`shaula`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;shaula&quot; translation_description=&quot;Name of the Star Shaula&quot;>Shaula&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="229"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alnath`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alnath&quot; translation_description=&quot;Name of the Star Alnath&quot;>Alnath&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="230"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alnilam`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alnilam&quot; translation_description=&quot;Name of the Star Alnilam&quot;>Alnilam&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="231"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alnair`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alnair&quot; translation_description=&quot;Name of the Star Alnair&quot;>Alnair&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="232"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alioth`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alioth&quot; translation_description=&quot;Name of the Star Alioth&quot;>Alioth&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="233"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`mirphak`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;mirphak&quot; translation_description=&quot;Name of the Star Mirphak&quot;>Mirphak&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="234"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`kaus_australis`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;kaus_australis&quot; translation_description=&quot;Name of the Star Kaus Australis&quot;>Kaus Australis&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="235"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`dubhe`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;dubhe&quot; translation_description=&quot;Name of the Star Dubhe&quot;>Dubhe&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="236"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alkaid`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alkaid&quot; translation_description=&quot;Name of the Star Alkaid&quot;>Alkaid&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="237"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alhena`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alhena&quot; translation_description=&quot;Name of the Star Alhena&quot;>Alhena&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="238"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`castor`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;castor&quot; translation_description=&quot;Name of the Star Castor&quot;>Castor&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="239"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`polaris`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;polaris&quot; translation_description=&quot;Name of the Star Polaris&quot;>Polaris&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="240"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alphard`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alphard&quot; translation_description=&quot;Name of the Star Alphard&quot;>Alphard&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="241"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hamal`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hamal&quot; translation_description=&quot;Name of the Star Hamal&quot;>Hamal&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="242"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`algieba`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;algieba&quot; translation_description=&quot;Name of the Star Algieba&quot;>Algieba&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="243"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diphda`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diphda&quot; translation_description=&quot;Name of the Star Diphda&quot;>Diphda&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="244"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`nunki`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;nunki&quot; translation_description=&quot;Name of the Star Nunki&quot;>Nunki&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="245"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`mirach`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;mirach&quot; translation_description=&quot;Name of the Star Mirach&quot;>Mirach&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="246"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alpheratz`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alpheratz&quot; translation_description=&quot;Name of the Star Alpheratz&quot;>Alpheratz&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="247"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`saiph`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;saiph&quot; translation_description=&quot;Name of the Star Saiph&quot;>Saiph&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="248"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`kochab`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;kochab&quot; translation_description=&quot;Name of the Star Kochab&quot;>Kochab&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="249"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`rasalhague`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;rasalhague&quot; translation_description=&quot;Name of the Star Rasalhague&quot;>Rasalhague&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="250"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`algol`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;algol&quot; translation_description=&quot;Name of the Star Algol&quot;>Algol&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="251"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`denebola`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;denebola&quot; translation_description=&quot;Name of the Star Denebola&quot;>Denebola&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="252"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alphekka`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alphekka&quot; translation_description=&quot;Name of the Star Alphekka&quot;>Alphekka&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="253"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`etamin`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;etamin&quot; translation_description=&quot;Name of the Star Etamin&quot;>Etamin&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="254"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`kaus`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;kaus&quot; translation_description=&quot;Name of the Star Kaus&quot;>Kaus&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="255"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`shedir`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;shedir&quot; translation_description=&quot;Name of the Star Shedir&quot;>Shedir&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="256"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`caph`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;caph&quot; translation_description=&quot;Name of the Star Caph&quot;>Caph&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="257"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`izar`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;izar&quot; translation_description=&quot;Name of the Star Izar&quot;>Izar&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="258"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`merak`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;merak&quot; translation_description=&quot;Name of the Star Merak&quot;>Merak&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="259"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`enif`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;enif&quot; translation_description=&quot;Name of the Star Enif&quot;>Enif&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="260"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ankaa`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ankaa&quot; translation_description=&quot;Name of the Star Ankaa&quot;>Ankaa&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="261"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`phad`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;phad&quot; translation_description=&quot;Name of the Star Phad&quot;>Phad&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="262"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alderamin`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alderamin&quot; translation_description=&quot;Name of the Star Alderamin&quot;>Alderamin&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="263"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`scheat`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;scheat&quot; translation_description=&quot;Name of the Star Scheat&quot;>Scheat&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="264"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`markab`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;markab&quot; translation_description=&quot;Name of the Star Markab&quot;>Markab&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="265"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menkar`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menkar&quot; translation_description=&quot;Name of the Star Menkar&quot;>Menkar&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="266"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`arneb`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;arneb&quot; translation_description=&quot;Name of the Star Arneb&quot;>Arneb&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="267"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`unukalhai`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;unukalhai&quot; translation_description=&quot;Name of the Star Unukalhai&quot;>Unukalhai&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="268"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`algenib`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;algenib&quot; translation_description=&quot;Name of the Star Algenib&quot;>Algenib&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="269"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`vindemiatrix`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;vindemiatrix&quot; translation_description=&quot;Name of the Star Vindemiatrix&quot;>Vindemiatrix&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="270"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alcyone`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alcyone&quot; translation_description=&quot;Name of the Star Alcyone&quot;>Alcyone&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="271"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`dog_star`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;dog_star&quot; translation_description=&quot;Name of the Dog Star (Sirius)&quot;>Dog Star&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="272"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`north_star`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;north_star&quot; translation_description=&quot;Name of the North Star&quot;>North Star&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="273"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pole_star`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pole_star&quot; translation_description=&quot;Name of the (North) Pole Star&quot;>Pole Star&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="274"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`alpha_centauri`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;alpha_centauri&quot; translation_description=&quot;Name of the star Alpha Centauri&quot;>Alpha Centauri&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="275"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`rigil_kent`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;rigil_kent&quot; translation_description=&quot;Name of the star Rigil Kent&quot;>Rigil Kent&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="276"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`e_lyrae`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;e_lyrae&quot; translation_description=&quot;Name of the star ε Lyrae&quot;>ε Lyrae&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="277"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m1`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m1&quot; translation_description=&quot;Name of the Messier object M1&quot;>M1&lt;/string>"
        errorLine2="            ~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="279"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m2`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m2&quot; translation_description=&quot;Name of the Messier object M2&quot;>M2&lt;/string>"
        errorLine2="            ~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="280"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m3`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m3&quot; translation_description=&quot;Name of the Messier object M3&quot;>M3&lt;/string>"
        errorLine2="            ~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="281"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m4`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m4&quot; translation_description=&quot;Name of the Messier object M4&quot;>M4&lt;/string>"
        errorLine2="            ~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="282"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m5`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m5&quot; translation_description=&quot;Name of the Messier object M5&quot;>M5&lt;/string>"
        errorLine2="            ~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="283"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m6`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m6&quot; translation_description=&quot;Name of the Messier object M6&quot;>M6&lt;/string>"
        errorLine2="            ~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="284"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m7`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m7&quot; translation_description=&quot;Name of the Messier object M7&quot;>M7&lt;/string>"
        errorLine2="            ~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="285"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m8`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m8&quot; translation_description=&quot;Name of the Messier object M8&quot;>M8&lt;/string>"
        errorLine2="            ~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="286"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m9`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m9&quot; translation_description=&quot;Name of the Messier object M9&quot;>M9&lt;/string>"
        errorLine2="            ~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="287"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m10`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m10&quot; translation_description=&quot;Name of the Messier object M10&quot;>M10&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="288"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m11`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m11&quot; translation_description=&quot;Name of the Messier object M11&quot;>M11&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="289"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m12`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m12&quot; translation_description=&quot;Name of the Messier object M12&quot;>M12&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="290"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m13`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m13&quot; translation_description=&quot;Name of the Messier object M13&quot;>M13&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="291"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m14`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m14&quot; translation_description=&quot;Name of the Messier object M14&quot;>M14&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="292"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m15`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m15&quot; translation_description=&quot;Name of the Messier object M15&quot;>M15&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="293"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m16`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m16&quot; translation_description=&quot;Name of the Messier object M16&quot;>M16&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="294"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m17`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m17&quot; translation_description=&quot;Name of the Messier object M17&quot;>M17&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="295"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m18`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m18&quot; translation_description=&quot;Name of the Messier object M18&quot;>M18&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="296"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m19`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m19&quot; translation_description=&quot;Name of the Messier object M19&quot;>M19&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="297"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m20`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m20&quot; translation_description=&quot;Name of the Messier object M20&quot;>M20&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="298"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m21`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m21&quot; translation_description=&quot;Name of the Messier object M21&quot;>M21&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="299"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m22`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m22&quot; translation_description=&quot;Name of the Messier object M22&quot;>M22&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="300"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m23`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m23&quot; translation_description=&quot;Name of the Messier object M23&quot;>M23&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="301"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m24`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m24&quot; translation_description=&quot;Name of the Messier object M24&quot;>M24&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="302"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m25`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m25&quot; translation_description=&quot;Name of the Messier object M25&quot;>M25&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="303"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m26`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m26&quot; translation_description=&quot;Name of the Messier object M26&quot;>M26&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="304"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m27`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m27&quot; translation_description=&quot;Name of the Messier object M27&quot;>M27&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="305"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m28`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m28&quot; translation_description=&quot;Name of the Messier object M28&quot;>M28&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="306"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m29`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m29&quot; translation_description=&quot;Name of the Messier object M29&quot;>M29&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="307"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m30`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m30&quot; translation_description=&quot;Name of the Messier object M30&quot;>M30&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="308"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m31`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m31&quot; translation_description=&quot;Name of the Messier object M31&quot;>M31&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="309"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m32`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m32&quot; translation_description=&quot;Name of the Messier object M32&quot;>M32&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="310"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m33`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m33&quot; translation_description=&quot;Name of the Messier object M33&quot;>M33&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="311"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m34`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m34&quot; translation_description=&quot;Name of the Messier object M34&quot;>M34&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="312"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m35`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m35&quot; translation_description=&quot;Name of the Messier object M35&quot;>M35&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="313"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m36`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m36&quot; translation_description=&quot;Name of the Messier object M36&quot;>M36&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="314"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m37`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m37&quot; translation_description=&quot;Name of the Messier object M37&quot;>M37&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="315"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m38`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m38&quot; translation_description=&quot;Name of the Messier object M38&quot;>M38&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="316"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m39`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m39&quot; translation_description=&quot;Name of the Messier object M39&quot;>M39&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="317"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m40`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m40&quot; translation_description=&quot;Name of the Messier object M40&quot;>M40&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="318"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m41`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m41&quot; translation_description=&quot;Name of the Messier object M41&quot;>M41&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="319"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m42`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m42&quot; translation_description=&quot;Name of the Messier object M42&quot;>M42&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="320"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m43`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m43&quot; translation_description=&quot;Name of the Messier object M43&quot;>M43&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="321"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m44`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m44&quot; translation_description=&quot;Name of the Messier object M44&quot;>M44&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="322"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m45`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m45&quot; translation_description=&quot;Name of the Messier object M45&quot;>M45&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="323"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m46`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m46&quot; translation_description=&quot;Name of the Messier object M46&quot;>M46&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="324"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m47`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m47&quot; translation_description=&quot;Name of the Messier object M47&quot;>M47&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="325"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m48`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m48&quot; translation_description=&quot;Name of the Messier object M48&quot;>M48&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="326"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m49`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m49&quot; translation_description=&quot;Name of the Messier object M49&quot;>M49&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="327"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m50`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m50&quot; translation_description=&quot;Name of the Messier object M50&quot;>M50&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="328"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m51`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m51&quot; translation_description=&quot;Name of the Messier object M51&quot;>M51&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="329"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m52`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m52&quot; translation_description=&quot;Name of the Messier object M52&quot;>M52&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="330"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m53`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m53&quot; translation_description=&quot;Name of the Messier object M53&quot;>M53&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="331"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m54`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m54&quot; translation_description=&quot;Name of the Messier object M54&quot;>M54&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="332"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m55`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m55&quot; translation_description=&quot;Name of the Messier object M55&quot;>M55&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="333"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m56`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m56&quot; translation_description=&quot;Name of the Messier object M56&quot;>M56&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="334"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m57`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m57&quot; translation_description=&quot;Name of the Messier object M57&quot;>M57&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="335"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m58`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m58&quot; translation_description=&quot;Name of the Messier object M58&quot;>M58&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="336"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m59`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m59&quot; translation_description=&quot;Name of the Messier object M59&quot;>M59&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="337"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m60`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m60&quot; translation_description=&quot;Name of the Messier object M60&quot;>M60&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="338"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m61`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m61&quot; translation_description=&quot;Name of the Messier object M61&quot;>M61&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="339"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m62`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m62&quot; translation_description=&quot;Name of the Messier object M62&quot;>M62&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="340"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m63`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m63&quot; translation_description=&quot;Name of the Messier object M63&quot;>M63&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="341"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m64`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m64&quot; translation_description=&quot;Name of the Messier object M64&quot;>M64&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="342"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m65`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m65&quot; translation_description=&quot;Name of the Messier object M65&quot;>M65&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="343"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m66`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m66&quot; translation_description=&quot;Name of the Messier object M66&quot;>M66&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="344"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m67`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m67&quot; translation_description=&quot;Name of the Messier object M67&quot;>M67&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="345"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m68`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m68&quot; translation_description=&quot;Name of the Messier object M68&quot;>M68&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="346"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m69`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m69&quot; translation_description=&quot;Name of the Messier object M69&quot;>M69&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="347"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m70`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m70&quot; translation_description=&quot;Name of the Messier object M70&quot;>M70&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="348"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m71`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m71&quot; translation_description=&quot;Name of the Messier object M71&quot;>M71&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="349"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m72`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m72&quot; translation_description=&quot;Name of the Messier object M72&quot;>M72&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="350"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m73`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m73&quot; translation_description=&quot;Name of the Messier object M73&quot;>M73&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="351"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m74`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m74&quot; translation_description=&quot;Name of the Messier object M74&quot;>M74&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="352"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m75`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m75&quot; translation_description=&quot;Name of the Messier object M75&quot;>M75&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="353"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m76`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m76&quot; translation_description=&quot;Name of the Messier object M76&quot;>M76&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="354"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m77`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m77&quot; translation_description=&quot;Name of the Messier object M77&quot;>M77&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="355"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m78`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m78&quot; translation_description=&quot;Name of the Messier object M78&quot;>M78&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="356"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m79`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m79&quot; translation_description=&quot;Name of the Messier object M79&quot;>M79&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="357"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m80`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m80&quot; translation_description=&quot;Name of the Messier object M80&quot;>M80&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="358"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m81`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m81&quot; translation_description=&quot;Name of the Messier object M81&quot;>M81&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="359"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m82`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m82&quot; translation_description=&quot;Name of the Messier object M82&quot;>M82&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="360"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m83`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m83&quot; translation_description=&quot;Name of the Messier object M83&quot;>M83&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="361"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m84`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m84&quot; translation_description=&quot;Name of the Messier object M84&quot;>M84&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="362"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m85`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m85&quot; translation_description=&quot;Name of the Messier object M85&quot;>M85&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="363"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m86`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m86&quot; translation_description=&quot;Name of the Messier object M86&quot;>M86&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="364"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m87`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m87&quot; translation_description=&quot;Name of the Messier object M87&quot;>M87&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="365"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m88`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m88&quot; translation_description=&quot;Name of the Messier object M88&quot;>M88&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="366"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m89`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m89&quot; translation_description=&quot;Name of the Messier object M89&quot;>M89&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="367"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m90`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m90&quot; translation_description=&quot;Name of the Messier object M90&quot;>M90&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="368"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m91`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m91&quot; translation_description=&quot;Name of the Messier object M91&quot;>M91&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="369"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m92`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m92&quot; translation_description=&quot;Name of the Messier object M92&quot;>M92&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="370"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m93`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m93&quot; translation_description=&quot;Name of the Messier object M93&quot;>M93&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="371"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m94`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m94&quot; translation_description=&quot;Name of the Messier object M94&quot;>M94&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="372"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m95`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m95&quot; translation_description=&quot;Name of the Messier object M95&quot;>M95&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="373"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m96`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m96&quot; translation_description=&quot;Name of the Messier object M96&quot;>M96&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="374"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m97`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m97&quot; translation_description=&quot;Name of the Messier object M97&quot;>M97&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="375"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m98`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m98&quot; translation_description=&quot;Name of the Messier object M98&quot;>M98&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="376"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m99`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m99&quot; translation_description=&quot;Name of the Messier object M99&quot;>M99&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="377"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m100`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m100&quot; translation_description=&quot;Name of the Messier object M100&quot;>M100&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="378"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m101`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m101&quot; translation_description=&quot;Name of the Messier object M101&quot;>M101&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="379"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m102`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m102&quot; translation_description=&quot;Name of the Messier object M102&quot;>M102&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="380"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m103`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m103&quot; translation_description=&quot;Name of the Messier object M103&quot;>M103&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="381"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m104`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m104&quot; translation_description=&quot;Name of the Messier object M104&quot;>M104&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="382"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m105`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m105&quot; translation_description=&quot;Name of the Messier object M105&quot;>M105&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="383"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m106`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m106&quot; translation_description=&quot;Name of the Messier object M106&quot;>M106&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="384"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m107`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m107&quot; translation_description=&quot;Name of the Messier object M107&quot;>M107&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="385"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m108`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m108&quot; translation_description=&quot;Name of the Messier object M108&quot;>M108&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="386"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m109`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m109&quot; translation_description=&quot;Name of the Messier object M109&quot;>M109&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="387"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`m110`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;m110&quot; translation_description=&quot;Name of the Messier object M110&quot;>M110&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="388"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ngc6543`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ngc6543&quot; translation_description=&quot;Name of the Messier object NGC6543&quot;>NGC6543&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="389"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ngc5139`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ngc5139&quot; translation_description=&quot;Name of the Messier object NGC5139&quot;>NGC5139&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="390"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`butterfly_cluster`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;butterfly_cluster&quot; translation_description=&quot;Name of the Messier object Butterfly Cluster&quot;>Butterfly Cluster&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="391"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`scorpions_tail`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;scorpions_tail&quot; translation_description=&quot;Name of the Messier object Scorpion\&apos;s Tail&quot;>Scorpion\&apos;s Tail&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="392"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`winnecke_4`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;winnecke_4&quot; translation_description=&quot;Name of the Messier object Winnecke 4&quot;>Winnecke 4&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="393"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`beehive_cluster`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;beehive_cluster&quot; translation_description=&quot;Name of the Messier object Beehive Cluster&quot;>Beehive Cluster&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="394"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`praesepe`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;praesepe&quot; translation_description=&quot;Name of the Messier object Praesepe&quot;>Praesepe&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="395"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`seven_sisters`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;seven_sisters&quot; translation_description=&quot;Name of the Messier object Seven Sisters&quot;>Seven Sisters&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="396"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`space_station`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;space_station&quot; translation_description=&quot;Name of the Internation Space Station&quot;>International Space Station&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="397"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`space_shuttle`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;space_shuttle&quot; translation_description=&quot;Name of the Space Shuttle&quot;>Space Shuttle&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="398"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`kml_load_error`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;kml_load_error&quot;>Failed to load KML file&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="399"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`load_kml_dialog_title`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;load_kml_dialog_title&quot;>Load KML&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="400"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`load_kml_file`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;fa&quot; (Persian), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;nb&quot; (Norwegian Bokmål), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;load_kml_file&quot;>Load&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="401"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`enable_analytics`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;enable_analytics&quot;>Send usage statistics&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="402"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`enable_analytics_desc`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;enable_analytics_desc&quot;>Make Sky Map better by sending anonymous data to Google Analytics&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="403"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`leonids`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;leonids&quot; translation_description=&quot;Meteor Shower&quot;>Leonids&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="404"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`geminids`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;geminids&quot; translation_description=&quot;Meteor Shower&quot;>Geminids&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="405"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`quadrantids`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;quadrantids&quot; translation_description=&quot;Meteor Shower&quot;>Quadrantids&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="406"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`lyrids`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;lyrids&quot; translation_description=&quot;Meteor Shower&quot;>Lyrids&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="407"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`aquariids`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;aquariids&quot; translation_description=&quot;Meteor Shower&quot;>Eta Aquariids&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="408"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`deltaaquariids`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;deltaaquariids&quot; translation_description=&quot;Meteor Shower&quot;>Delta Aquariids&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="409"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`perseids`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;perseids&quot; translation_description=&quot;Meteor Shower&quot;>Perseids&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="410"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`orionids`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;orionids&quot; translation_description=&quot;Meteor Shower&quot;>Orionids&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="411"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`puppidvelids`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;puppidvelids&quot; translation_description=&quot;Meteor Shower&quot;>Puppid-Velids&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="412"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ursids`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ursids&quot; translation_description=&quot;Meteor Shower&quot;>Ursids&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="413"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`no_sensor_warning`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;no_sensor_warning&quot;>Your device may lack orientation sensors - automode may not work&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="415"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`warning_dialog_title`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;warning_dialog_title&quot;>Bad news!&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="416"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`missing_sensor_dialog_text`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;missing_sensor_dialog_text&quot;>\n"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="417"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`do_not_show_again`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;do_not_show_again&quot;>Do not show this message again&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="429"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`title_activity_diagnostic`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;title_activity_diagnostic&quot;>Diagnostics&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="430"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_rationale_title`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_rationale_title&quot;>Why do we ask for your location?&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="431"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`location_rationale_text`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;location_rationale_text&quot;>The stars you can see depend on where on planet earth you are.  Without your location we cannot show you an accurate map.  If you do not want your phone to give us your location you can provide it manually in the settings.  You need only provide the nearest city.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="432"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`play_services_error`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;play_services_error&quot;>Warning: Google Play Services error - Automatic location might not work&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="433"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_absent`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sensor_absent&quot;>Absent&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="434"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_accuracy_unknown`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sensor_accuracy_unknown&quot;>Accuracy: Unknown&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="435"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_accuracy_unreliable`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sensor_accuracy_unreliable&quot;>Accuracy: Unreliable&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="436"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_accuracy_low`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sensor_accuracy_low&quot;>Accuracy: Low&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="437"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_accuracy_medium`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sensor_accuracy_medium&quot;>Accuracy: Medium&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="438"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_accuracy_high`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sensor_accuracy_high&quot;>Accuracy: High&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="439"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_accuracy_nocontact`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sensor_accuracy_nocontact&quot;>Accuracy: No contact&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="440"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_general_heading`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_general_heading&quot;>General&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="441"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_phone`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_phone&quot;>Device&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="442"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_android_version`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_android_version&quot;>Android version&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="443"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_sky_map_version`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_sky_map_version&quot;>Sky Map version&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="444"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_sensors_heading`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_sensors_heading&quot;>Sensors&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="445"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_compass`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_compass&quot;>Compass&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="446"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_accelerometer`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_accelerometer&quot;>Accelerometer&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="447"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_rotation_vector`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_rotation_vector&quot;>Rotation&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="448"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_gyroscope`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_gyroscope&quot;>Gyroscope&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="449"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_light_level`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_light_level&quot;>Light level&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="450"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_location_and_time_heading`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_location_and_time_heading&quot;>Location and Time&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="451"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_gps`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_gps&quot;>GPS&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="452"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_location`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_location&quot;>Location (lat, long)&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="453"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_pointing_ra_dec`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_pointing_ra_dec&quot;>Pointing snapshot&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="454"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_magnetic_correction`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_magnetic_correction&quot;>Mag correction&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="455"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_local_datetime`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_local_datetime&quot;>Local datetime&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="456"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_universal_time`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_universal_time&quot;>Universal datetime&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="457"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_network_heading`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_network_heading&quot;>Network&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="458"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_connection`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_connection&quot;>Connection&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="459"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`diagnostics_activity_rotation_matrix`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;diagnostics_activity_rotation_matrix&quot;>Rot Matrix&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="460"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`enabled`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;enabled&quot;>Enabled&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="461"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`disabled`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;disabled&quot;>Disabled&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="462"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`permission_disabled`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;permission_disabled&quot;>Permission disabled&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="463"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`no_gps`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;no_gps&quot;>No GPS&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="464"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`connected`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;connected&quot;>Connected&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="465"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`disconnected`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;disconnected&quot;>Disconnected&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="466"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`wifi`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;wifi&quot;>&quot; (wifi)&quot;&lt;/string>"
        errorLine2="            ~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="467"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`cell_network`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;cell_network&quot;>&quot; (cell)&quot;&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="468"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`menu_calibrate`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_calibrate&quot;>Calibrate&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="469"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`compass_calibration_activity_heading_compass`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;compass_calibration_activity_heading_compass&quot;>Compass -&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="470"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`compass_calibration_activity_do_not_show_this_again`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;compass_calibration_activity_do_not_show_this_again&quot;>Do not show this again&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="471"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`compass_calibration_activity_warning`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;compass_calibration_activity_warning&quot;>Your compass needs to be calibrated&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="472"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_reverse_preference_title`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sensor_reverse_preference_title&quot;>Reverse Magnetic Z&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="473"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sensor_reverse_preference_summary`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sensor_reverse_preference_summary&quot;>Fix for phones with incorrectly implemented sensors - requires restart&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="474"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`whats_new_dialog_title`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;whats_new_dialog_title&quot;>What\&apos;s new&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="475"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`disable_gyro_preference_title`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;disable_gyro_preference_title&quot;>Disable gyroscope&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="476"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`disable_gyro_preference_summary`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;disable_gyro_preference_summary&quot;>Not all devices have a gyro - if yours does then you\&apos;ll get better results with it enabled and this box unchecked.  On the other hand if your device does not have a gyro then Sky Map will probably not work if you uncheck this box.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="477"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`rotate_horizon_preference_title`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;rotate_horizon_preference_title&quot;>Rotate horizon&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="478"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`rotate_horizon_preference_summary`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;rotate_horizon_preference_summary&quot;>Rotate by 90 degree horizon (for screens with forced landscape, such as smartglasses)&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="479"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sc1`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sc1&quot;>sc1&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="480"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sc2`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sc2&quot;>sc2&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="481"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sc3`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sc3&quot;>sc3&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="482"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sc4`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sc4&quot;>sc4&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="483"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sc5`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sc5&quot;>sc5&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="484"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sc6`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sc6&quot;>sc6&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="485"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sc7`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sc7&quot;>sc7&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="486"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sc8`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sc8&quot;>sc8&lt;/string>"
        errorLine2="            ~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\strings.xml"
            line="487"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`whats_new_text`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;ca&quot; (Catalan), &quot;cs&quot; (Czech), &quot;cy&quot; (Welsh), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;el&quot; (Greek), &quot;es&quot; (Spanish), &quot;es-ES&quot; (Spanish: Spain), &quot;fa&quot; (Persian), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;hu&quot; (Hungarian), &quot;in&quot; (Indonesian), &quot;it&quot; (Italian), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nb&quot; (Norwegian Bokmål), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;sv&quot; (Swedish), &quot;th&quot; (Thai), &quot;tr&quot; (Turkish), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;whats_new_text&quot; translation_description=&quot;Description of new features in this version in html&quot;>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values\whatsnew.xml"
            line="3"
            column="13"/>
    </issue>

    <issue
        id="ExtraTranslation"
        severity="Fatal"
        message="&quot;`allow_rotation_pref`&quot; is translated here but not found in default locale"
        category="Correctness:Messages"
        priority="6"
        summary="Extra translation"
        explanation="If a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It&apos;s technically possible that your application is only intended to run in a specific locale, but it&apos;s still a good idea to provide a fallback.).

Note that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it&apos;s important to clean them up."
        errorLine1="    &lt;string name=&quot;allow_rotation_pref&quot; translation_description=&quot;preference to enable rotation of the map with a two finger movement&quot;>التدور بتعدد اللمس&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-ar\strings.xml"
            line="151"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-cs\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-de\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-es\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-es-rES\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-fr\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-it\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-ja\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-ko\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-nl\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-pl\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-pt\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-ru\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-zh-rCN\strings.xml"
            line="137"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-zh-rTW\strings.xml"
            line="137"
            column="13"/>
    </issue>

    <issue
        id="ExtraTranslation"
        severity="Fatal"
        message="&quot;`allow_rotation_pref_desc`&quot; is translated here but not found in default locale"
        category="Correctness:Messages"
        priority="6"
        summary="Extra translation"
        explanation="If a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It&apos;s technically possible that your application is only intended to run in a specific locale, but it&apos;s still a good idea to provide a fallback.).

Note that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it&apos;s important to clean them up."
        errorLine1="    &lt;string name=&quot;allow_rotation_pref_desc&quot; translation_description=&quot;a qualification for the Multitouch rotation option&quot;>إذا كان الجهاز يدعم هذه الخاصية فقط&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-ar\strings.xml"
            line="152"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-cs\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-de\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-es\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-es-rES\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-fr\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-it\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-ja\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-ko\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-nl\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-pl\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-pt\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-ru\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-zh-rCN\strings.xml"
            line="138"
            column="13"/>
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-zh-rTW\strings.xml"
            line="138"
            column="13"/>
    </issue>

    <issue
        id="ExtraTranslation"
        severity="Fatal"
        message="&quot;`hour_marker`&quot; is translated here but not found in default locale"
        category="Correctness:Messages"
        priority="6"
        summary="Extra translation"
        explanation="If a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It&apos;s technically possible that your application is only intended to run in a specific locale, but it&apos;s still a good idea to provide a fallback.).

Note that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it&apos;s important to clean them up."
        errorLine1="    &lt;string name=&quot;hour_marker&quot;>س%d&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-ar\strings.xml"
            line="412"
            column="13"/>
    </issue>

    <issue
        id="ExtraTranslation"
        severity="Fatal"
        message="&quot;`use_gyro_preference_title`&quot; is translated here but not found in default locale"
        category="Correctness:Messages"
        priority="6"
        summary="Extra translation"
        explanation="If a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It&apos;s technically possible that your application is only intended to run in a specific locale, but it&apos;s still a good idea to provide a fallback.).

Note that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it&apos;s important to clean them up."
        errorLine1="    &lt;string name=&quot;use_gyro_preference_title&quot;>Gyroskop verwenden (Experimentell))&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-de\strings.xml"
            line="425"
            column="13"/>
    </issue>

    <issue
        id="ExtraTranslation"
        severity="Fatal"
        message="&quot;`use_gyro_preference_summary`&quot; is translated here but not found in default locale"
        category="Correctness:Messages"
        priority="6"
        summary="Extra translation"
        explanation="If a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It&apos;s technically possible that your application is only intended to run in a specific locale, but it&apos;s still a good idea to provide a fallback.).

Note that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it&apos;s important to clean them up."
        errorLine1="    &lt;string name=&quot;use_gyro_preference_summary&quot;>Sorgt für flüssigere Bewegungen. Nicht alle Geräte besitzen ein Gyroskop.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Vaibhav Saini\AndroidStudioProjects\vasa_sky\app\src\main\res\values-de\strings.xml"
            line="426"
            column="13"/>
    </issue>

</issues>
